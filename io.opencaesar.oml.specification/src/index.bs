<pre class='metadata'>
Title: Ontological Modeling Language 0.9
Shortname: oml
Level: 1
Status: ld
URL: https://github.com/opencaesar/oml
Editor: Maged Elaasar (JPL)
Editor: Nicolas Rouquette (JPL)
Local Boilerplate: copyright yes, logo yes
Markup Shorthands: markdown yes
Abstract: This document specifies the Ontological Modeling Language (OML).
</pre>

<style>
body {
  padding: 0;
  margin: 0;
  max-width: unset;
}

table {
  border-collapse: collapse;
  border: 3px solid black;
}

th, td {
  border: 3px solid black;
  padding: 20px;
}

thead th:nth-child(1) {
  text-align: center;
}

thead th:nth-child(2) {
  text-align: center;
}

thead th:nth-child(3) {
  text-align: center;
}

thead th:nth-child(4) {
  text-align: center;
}

thead th:nth-child(5) {
  text-align: center;
}

tbody td:nth-child(1) {
  text-align: center;
}

tbody td:nth-child(2) {
  text-align: center;
}

tbody td:nth-child(3) {
  text-align: center;
}

tbody td:nth-child(4) {
  text-align: center;
}

tbody td:nth-child(5) {
  text-align: left;
}

.tab-container {
  margin-bottom: 35px;
}

.tab-content {
  // padding-top: 1em;
}

.tab-content.diagram {
  padding-top: 1em;
  display: flex;
  // justify-content: center;
  align-items: center;
  // background-color: #D5D5D5;
  min-height: 50px;
}

.tab-content.diagram.hidden {
  display: none;
}

.hidden {
  display: none;
}

.bar {
  width: 100%;
  overflow: hidden;
  background-color: #668ba8;
  display: flex;
}

.bar-btn {
  border: none;
  padding: 8px 16px;
  user-select: none;
  background-color: inherit;
  color: white;
  cursor: pointer;
  width: auto;
  display: block;
}

.bar button.active {
  color: black;
  background-color: #67cbf8;
}

.bar button:hover {
  color: black;
  background-color: #cdb066;
}

</style>

<!-- Instruct bikeshed to export all 'dfn', even if they are not referenced, without warnings. -->
<div export=true>

<pre class=include>
path: getting-started.md
</pre>

<pre class=include>
path: concrete-syntax.md
</pre>

<pre class=include>
path: Oml.md
</pre>

<pre class=include>
path: public-api.md
</pre>

</div>

<script>
function onBarClick(e) {
  const selectedTab = e.currentTarget.value;
  const container = e.currentTarget.closest(".tab-container");
  const tabs = Array.prototype.slice.call(container.children, 1);
  console.log(tabs);
  for(const tab of tabs) {
    console.log(tab.classList);
    if (Array.prototype.includes.call(tab.classList, selectedTab)) {
      if (Array.prototype.includes.call(tab.classList, "hidden")) {
        tab.classList.toggle("hidden");
      }
    } else {
      if (!Array.prototype.includes.call(tab.classList, "hidden")) {
        tab.classList.toggle("hidden");
      }
    }
  }

  const bar = container.children[0];
  for (const tab of bar.children) {
    if (tab.value === selectedTab) {
      if (!Array.prototype.includes.call(tab.classList, "active")) {
        tab.classList.toggle("active");
      }
    } else {
      if (Array.prototype.includes.call(tab.classList, "active")) {
        tab.classList.toggle("active");
      }
    }
  }
}
</script>
